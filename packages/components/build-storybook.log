info @storybook/react v6.2.9
info 
info => Cleaning outputDir: /var/folders/vf/hc7q17dj43s2k8lmkm1bydjw0000gn/T/chromatic--30820-N6DGLegX1BRe
info => Loading presets
info Found existing addon "@storybook/addon-docs", skipping.
info => Compiling manager..
info => Compiling preview..
info => Loading 1 config file in "/Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook"
info => Loading 7 other files in "/Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook"
WARN We found no files matching any of the following globs:
WARN 
WARN /src/**/*.stories.@(js|jsx|ts|tsx)
WARN 
WARN Maybe your glob was invalid?
WARN see: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#correct-globs-in-mainjs
info => Using PostCSS preset with postcss@7.0.35
info => Using default Webpack5 setup
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook/storybook-init-framework-entry.js import '@storybook/react';
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-docs/dist/esm/frameworks/react/config.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-other-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook/preview.js-generated-config-entry.js function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable import/no-unresolved */
import { addDecorator, addParameters, addLoader, addArgTypesEnhancer } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-api';
import { logger } from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/node_modules/@storybook/client-logger';
import * as config from '/Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook/preview.js';
Object.keys(config).forEach(function (key) {
  var value = config[key];

  switch (key) {
    case 'args':
    case 'argTypes':
      {
        return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
      }

    case 'decorators':
      {
        return value.forEach(function (decorator) {
          return addDecorator(decorator, false);
        });
      }

    case 'loaders':
      {
        return value.forEach(function (loader) {
          return addLoader(loader, false);
        });
      }

    case 'parameters':
      {
        return addParameters(_objectSpread({}, value), false);
      }

    case 'argTypesEnhancers':
      {
        return value.forEach(function (enhancer) {
          return addArgTypesEnhancer(enhancer);
        });
      }

    case 'globals':
    case 'globalTypes':
      {
        var v = {};
        v[key] = value;
        return addParameters(v, false);
      }

    default:
      {
        // eslint-disable-next-line prefer-template
        return console.log(key + ' was not supported :( !');
      }
  }
});
preview Write virtual module: /Users/soyoung/Desktop/workspace/bookstagram/packages/components/.storybook/generated-stories-entry.js "use strict";

var _frameworkImportPath = require("@storybook/react");

/* eslint-disable import/no-unresolved */
(0, _frameworkImportPath.configure)([require.context('/src', true, /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx))$/)], module, false);
<s> [webpack.Progress] 0% 

<s> [webpack.Progress] 1% setup initialize
<s> [webpack.Progress] 1% setup initialize HtmlWebpackPlugin
<s> [webpack.Progress] 1% setup initialize
<s> [webpack.Progress] 2% setup before run
<s> [webpack.Progress] 2% setup before run NodeEnvironmentPlugin
<s> [webpack.Progress] 2% setup before run
<s> [webpack.Progress] 3% setup run
<s> [webpack.Progress] 3% setup run
<s> [webpack.Progress] 4% setup normal module factory
<s> [webpack.Progress] 4% setup normal module factory CaseSensitivePathsPlugin
<s> [webpack.Progress] 4% setup normal module factory
<s> [webpack.Progress] 5% setup context module factory
<s> [webpack.Progress] 5% setup context module factory
<s> [webpack.Progress] 6% setup before compile
<s> [webpack.Progress] 6% setup before compile ProgressPlugin
<s> [webpack.Progress] 6% setup before compile
<s> [webpack.Progress] 7% setup compile
<s> [webpack.Progress] 7% setup compile ExternalsPlugin
<s> [webpack.Progress] 7% setup compile
<s> [webpack.Progress] 8% setup compilation
<s> [webpack.Progress] 8% setup compilation mini-css-extract-plugin
<s> [webpack.Progress] 8% setup compilation ArrayPushCallbackChunkFormatPlugin
<s> [webpack.Progress] 8% setup compilation JsonpChunkLoadingPlugin
<s> [webpack.Progress] 8% setup compilation StartupChunkDependenciesPlugin
<s> [webpack.Progress] 8% setup compilation ImportScriptsChunkLoadingPlugin
<s> [webpack.Progress] 8% setup compilation FetchCompileWasmPlugin
<s> [webpack.Progress] 8% setup compilation FetchCompileAsyncWasmPlugin
<s> [webpack.Progress] 8% setup compilation WorkerPlugin
<s> [webpack.Progress] 8% setup compilation SplitChunksPlugin
<s> [webpack.Progress] 8% setup compilation RuntimeChunkPlugin
<s> [webpack.Progress] 8% setup compilation ResolverCachePlugin
<s> [webpack.Progress] 8% setup compilation HtmlWebpackPlugin
<s> [webpack.Progress] 8% setup compilation
<s> [webpack.Progress] 9% setup compilation
<s> [webpack.Progress] 9% setup compilation DefinePlugin
<s> [webpack.Progress] 9% setup compilation ProgressPlugin
<s> [webpack.Progress] 9% setup compilation DefinePlugin
<s> [webpack.Progress] 9% setup compilation mini-css-extract-plugin
<s> [webpack.Progress] 9% setup compilation ChunkPrefetchPreloadPlugin
<s> [webpack.Progress] 9% setup compilation SourceMapDevToolPlugin
<s> [webpack.Progress] 9% setup compilation JavascriptModulesPlugin
<s> [webpack.Progress] 9% setup compilation JsonModulesPlugin
<s> [webpack.Progress] 9% setup compilation AssetModulesPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation EntryPlugin
<s> [webpack.Progress] 9% setup compilation RuntimePlugin
<s> [webpack.Progress] 9% setup compilation InferAsyncModulesPlugin
<s> [webpack.Progress] 9% setup compilation DataUriPlugin
<s> [webpack.Progress] 9% setup compilation FileUriPlugin
<s> [webpack.Progress] 9% setup compilation CompatibilityPlugin
<s> [webpack.Progress] 9% setup compilation HarmonyModulesPlugin
<s> [webpack.Progress] 9% setup compilation AMDPlugin
<s> [webpack.Progress] 9% setup compilation RequireJsStuffPlugin
<s> [webpack.Progress] 9% setup compilation CommonJsPlugin
<s> [webpack.Progress] 9% setup compilation LoaderPlugin
<s> [webpack.Progress] 9% setup compilation LoaderPlugin
<s> [webpack.Progress] 9% setup compilation NodeStuffPlugin
<s> [webpack.Progress] 9% setup compilation APIPlugin
<s> [webpack.Progress] 9% setup compilation ExportsInfoApiPlugin
<s> [webpack.Progress] 9% setup compilation WebpackIsIncludedPlugin
<s> [webpack.Progress] 9% setup compilation ConstPlugin
<s> [webpack.Progress] 9% setup compilation UseStrictPlugin
<s> [webpack.Progress] 9% setup compilation RequireIncludePlugin
<s> [webpack.Progress] 9% setup compilation RequireEnsurePlugin
<s> [webpack.Progress] 9% setup compilation RequireContextPlugin
<s> [webpack.Progress] 9% setup compilation ImportPlugin
<s> [webpack.Progress] 9% setup compilation SystemPlugin
<s> [webpack.Progress] 9% setup compilation ImportMetaPlugin
<s> [webpack.Progress] 9% setup compilation URLPlugin
<s> [webpack.Progress] 9% setup compilation DefaultStatsFactoryPlugin
<s> [webpack.Progress] 9% setup compilation DefaultStatsPresetPlugin
<s> [webpack.Progress] 9% setup compilation DefaultStatsPrinterPlugin
<s> [webpack.Progress] 9% setup compilation JavascriptMetaInfoPlugin
<s> [webpack.Progress] 9% setup compilation EnsureChunkConditionsPlugin
<s> [webpack.Progress] 9% setup compilation RemoveEmptyChunksPlugin
<s> [webpack.Progress] 9% setup compilation MergeDuplicateChunksPlugin
<s> [webpack.Progress] 9% setup compilation FlagIncludedChunksPlugin
<s> [webpack.Progress] 9% setup compilation SideEffectsFlagPlugin
<s> [webpack.Progress] 9% setup compilation FlagDependencyExportsPlugin
<s> [webpack.Progress] 9% setup compilation FlagDependencyUsagePlugin
<s> [webpack.Progress] 9% setup compilation InnerGraphPlugin
<s> [webpack.Progress] 9% setup compilation MangleExportsPlugin
<s> [webpack.Progress] 9% setup compilation ModuleConcatenationPlugin
<s> [webpack.Progress] 9% setup compilation NoEmitOnErrorsPlugin
<s> [webpack.Progress] 9% setup compilation RealContentHashPlugin
<s> [webpack.Progress] 9% setup compilation WasmFinalizeExportsPlugin
<s> [webpack.Progress] 9% setup compilation DeterministicModuleIdsPlugin
<s> [webpack.Progress] 9% setup compilation DeterministicChunkIdsPlugin
<s> [webpack.Progress] 9% setup compilation DefinePlugin
<s> [webpack.Progress] 9% setup compilation TerserPlugin
<s> [webpack.Progress] 9% setup compilation TemplatedPathPlugin
<s> [webpack.Progress] 9% setup compilation RecordIdsPlugin
<s> [webpack.Progress] 9% setup compilation WarnCaseSensitiveModulesPlugin
<s> [webpack.Progress] 9% setup compilation IgnoreWarningsPlugin
<s> [webpack.Progress] 9% setup compilation
<s> [webpack.Progress] 10% building
<s> [webpack.Progress] 10% building 0/1 entries 0/0 dependencies 0/0 modules
<s> [webpack.Progress] 10% building 0/12 entries 3/13 dependencies 0/3 modules
Though the "loose" option was set to "false" in your @babel/preset-env config, it will not be used for @babel/plugin-proposal-private-property-in-object since the "loose" mode option was set to "true" for @babel/plugin-proposal-private-methods.
The "loose" option must be the same for @babel/plugin-proposal-class-properties, @babel/plugin-proposal-private-methods and @babel/plugin-proposal-private-property-in-object (when they are enabled): you can silence this warning by explicitly adding
	["@babel/plugin-proposal-private-property-in-object", { "loose": true }]
to the "plugins" section of your Babel config.
<s> [webpack.Progress] 10% building 0/12 entries 23/65 dependencies 2/21 modules
<s> [webpack.Progress] 10% building import loader ../../node_modules/ts-loader/index.js
<s> [webpack.Progress] 10% building 0/12 entries 63/109 dependencies 2/43 modules
<s> [webpack.Progress] 10% building 0/12 entries 69/131 dependencies 3/46 modules
<s> [webpack.Progress] 10% building 0/12 entries 257/282 dependencies 9/143 modules
<s> [webpack.Progress] 14% building 1/12 entries 530/799 dependencies 13/191 modules
<s> [webpack.Progress] 14% building 1/12 entries 861/1000 dependencies 26/319 modules
<s> [webpack.Progress] 14% building 1/12 entries 1300/1372 dependencies 75/393 modules
<s> [webpack.Progress] 14% building 1/12 entries 1692/1800 dependencies 153/485 modules
<s> [webpack.Progress] 14% building import loader ./node_modules/mini-css-extract-plugin/dist/loader.js
<s> [webpack.Progress] 14% building import loader ./node_modules/css-loader/dist/cjs.js
<s> [webpack.Progress] 14% building import loader ./node_modules/sass-loader/dist/cjs.js
<s> [webpack.Progress] 14% building 1/12 entries 1955/2040 dependencies 252/533 modules
<s> [webpack.Progress] 14% building 1/12 entries 2100/2266 dependencies 283/583 modules
<s> [webpack.Progress] 14% building import loader ./node_modules/url-loader/dist/cjs.js
<s> [webpack.Progress] 14% building import loader ./node_modules/image-webpack-loader/index.js
<s> [webpack.Progress] 14% building 1/12 entries 2387/2440 dependencies 327/621 modules
<s> [webpack.Progress] 14% building 1/12 entries 2500/2558 dependencies 367/660 modules
<s> [webpack.Progress] 14% building 1/12 entries 2622/2700 dependencies 410/715 modules
<s> [webpack.Progress] 16% building 1/12 entries 2944/3000 dependencies 551/844 modules
<s> [webpack.Progress] 17% building 1/12 entries 3346/3380 dependencies 700/925 modules
<s> [webpack.Progress] 19% building 1/12 entries 3676/3700 dependencies 854/1024 modules
<s> [webpack.Progress] 19% building 2/12 entries 3681/3704 dependencies 888/1024 modules
<s> [webpack.Progress] 23% building 3/12 entries 3681/3704 dependencies 889/1024 modules
<s> [webpack.Progress] 28% building 4/12 entries 3681/3704 dependencies 890/1024 modules
<s> [webpack.Progress] 32% building 5/12 entries 3681/3704 dependencies 891/1024 modules
<s> [webpack.Progress] 37% building 6/12 entries 3681/3704 dependencies 892/1024 modules
<s> [webpack.Progress] 42% building 7/12 entries 3681/3704 dependencies 893/1024 modules
<s> [webpack.Progress] 46% building 8/12 entries 3701/3729 dependencies 908/1028 modules
<s> [webpack.Progress] 46% building 8/12 entries 4176/4200 dependencies 1063/1149 modules
<s> [webpack.Progress] 51% building 9/12 entries 4350/4362 dependencies 1152/1202 modules
<s> [webpack.Progress] 55% building 10/12 entries 4350/4362 dependencies 1153/1202 modules
<s> [webpack.Progress] 60% building 11/12 entries 4358/4362 dependencies 1187/1202 modules
<s> [webpack.Progress] 65% building 12/12 entries 4367/4367 dependencies 1206/1206 modules
<s> [webpack.Progress] 65% building
<s> [webpack.Progress] 69% building finish
<s> [webpack.Progress] 69% building finish
<s> [webpack.Progress] 70% sealing finish module graph
<s> [webpack.Progress] 70% sealing finish module graph ResolverCachePlugin
<s> [webpack.Progress] 70% sealing finish module graph InferAsyncModulesPlugin
<s> [webpack.Progress] 70% sealing finish module graph FlagDependencyExportsPlugin
<s> [webpack.Progress] 70% sealing finish module graph InnerGraphPlugin
<s> [webpack.Progress] 70% sealing finish module graph WasmFinalizeExportsPlugin
<s> [webpack.Progress] 70% sealing finish module graph
<s> [webpack.Progress] 70% sealing plugins
<s> [webpack.Progress] 70% sealing plugins WarnCaseSensitiveModulesPlugin
<s> [webpack.Progress] 70% sealing plugins React Docgen Typescript Plugin
<s> [webpack.Progress] 70% sealing plugins
<s> [webpack.Progress] 71% sealing dependencies optimization
<s> [webpack.Progress] 71% sealing dependencies optimization SideEffectsFlagPlugin
<s> [webpack.Progress] 71% sealing dependencies optimization FlagDependencyUsagePlugin
<s> [webpack.Progress] 71% sealing dependencies optimization
<s> [webpack.Progress] 71% sealing after dependencies optimization
<s> [webpack.Progress] 71% sealing after dependencies optimization
<s> [webpack.Progress] 72% sealing chunk graph
<s> [webpack.Progress] 72% sealing chunk graph
<s> [webpack.Progress] 73% sealing after chunk graph
<s> [webpack.Progress] 73% sealing after chunk graph
<s> [webpack.Progress] 73% sealing optimizing
<s> [webpack.Progress] 73% sealing optimizing
<s> [webpack.Progress] 74% sealing module optimization
<s> [webpack.Progress] 74% sealing module optimization
<s> [webpack.Progress] 75% sealing after module optimization
<s> [webpack.Progress] 75% sealing after module optimization
<s> [webpack.Progress] 75% sealing chunk optimization
<s> [webpack.Progress] 75% sealing chunk optimization EnsureChunkConditionsPlugin
<s> [webpack.Progress] 75% sealing chunk optimization RemoveEmptyChunksPlugin
<s> [webpack.Progress] 75% sealing chunk optimization MergeDuplicateChunksPlugin
<s> [webpack.Progress] 75% sealing chunk optimization SplitChunksPlugin
<s> [webpack.Progress] 75% sealing chunk optimization RemoveEmptyChunksPlugin
<s> [webpack.Progress] 75% sealing chunk optimization
<s> [webpack.Progress] 76% sealing after chunk optimization
<s> [webpack.Progress] 76% sealing after chunk optimization
<s> [webpack.Progress] 77% sealing module and chunk tree optimization
<s> [webpack.Progress] 77% sealing module and chunk tree optimization PersistentChildCompilerSingletonPlugin
<s> [webpack.Progress] 77% sealing module and chunk tree optimization
<s> [webpack.Progress] 77% sealing after module and chunk tree optimization
<s> [webpack.Progress] 77% sealing after module and chunk tree optimization
<s> [webpack.Progress] 78% sealing chunk modules optimization
<s> [webpack.Progress] 78% sealing chunk modules optimization ModuleConcatenationPlugin
<s> [webpack.Progress] 78% sealing chunk modules optimization
<s> [webpack.Progress] 78% sealing after chunk modules optimization
<s> [webpack.Progress] 78% sealing after chunk modules optimization
<s> [webpack.Progress] 79% sealing module reviving
<s> [webpack.Progress] 79% sealing module reviving RecordIdsPlugin
<s> [webpack.Progress] 79% sealing module reviving
<s> [webpack.Progress] 80% sealing before module ids
<s> [webpack.Progress] 80% sealing before module ids
<s> [webpack.Progress] 80% sealing module ids
<s> [webpack.Progress] 80% sealing module ids DeterministicModuleIdsPlugin
<s> [webpack.Progress] 80% sealing module ids
<s> [webpack.Progress] 81% sealing module id optimization
<s> [webpack.Progress] 81% sealing module id optimization
<s> [webpack.Progress] 82% sealing module id optimization
<s> [webpack.Progress] 82% sealing module id optimization
<s> [webpack.Progress] 82% sealing chunk reviving
<s> [webpack.Progress] 82% sealing chunk reviving RecordIdsPlugin
<s> [webpack.Progress] 82% sealing chunk reviving
<s> [webpack.Progress] 83% sealing before chunk ids
<s> [webpack.Progress] 83% sealing before chunk ids
<s> [webpack.Progress] 84% sealing chunk ids
<s> [webpack.Progress] 84% sealing chunk ids DeterministicChunkIdsPlugin
<s> [webpack.Progress] 84% sealing chunk ids
<s> [webpack.Progress] 84% sealing chunk id optimization
<s> [webpack.Progress] 84% sealing chunk id optimization FlagIncludedChunksPlugin
<s> [webpack.Progress] 84% sealing chunk id optimization
<s> [webpack.Progress] 85% sealing after chunk id optimization
<s> [webpack.Progress] 85% sealing after chunk id optimization
<s> [webpack.Progress] 86% sealing record modules
<s> [webpack.Progress] 86% sealing record modules RecordIdsPlugin
<s> [webpack.Progress] 86% sealing record modules
<s> [webpack.Progress] 86% sealing record chunks
<s> [webpack.Progress] 86% sealing record chunks RecordIdsPlugin
<s> [webpack.Progress] 86% sealing record chunks
<s> [webpack.Progress] 87% sealing module hashing
<s> [webpack.Progress] 87% sealing module hashing
<s> [webpack.Progress] 87% sealing code generation
<s> [webpack.Progress] 87% sealing code generation
<s> [webpack.Progress] 88% sealing runtime requirements
<s> [webpack.Progress] 88% sealing runtime requirements
<s> [webpack.Progress] 89% sealing hashing
<s> [webpack.Progress] 89% sealing hashing
<s> [webpack.Progress] 89% sealing after hashing
<s> [webpack.Progress] 89% sealing after hashing
<s> [webpack.Progress] 90% sealing record hash
<s> [webpack.Progress] 90% sealing record hash
<s> [webpack.Progress] 91% sealing module assets processing
<s> [webpack.Progress] 91% sealing module assets processing
<s> [webpack.Progress] 91% sealing chunk assets processing
<s> [webpack.Progress] 91% sealing chunk assets processing
<s> [webpack.Progress] 92% sealing asset processing
<s> [webpack.Progress] 92% sealing asset processing PersistentChildCompilerSingletonPlugin
<s> [webpack.Progress] 92% sealing asset processing TerserPlugin
info => Manager built (21 s)
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.css generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.css generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.3d7d898c.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.3d7d898c.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin runtime~main.e94210ff.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin runtime~main.e94210ff.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 665.d74fb5f4.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 665.d74fb5f4.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 347.8c7824d1.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 347.8c7824d1.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 881.93fb64ee.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 881.93fb64ee.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 459.deeb0b85.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 459.deeb0b85.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 331.0fdf80c0.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 331.0fdf80c0.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 611.a2463068.iframe.bundle.js generate SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 611.a2463068.iframe.bundle.js generated SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin resolve sources
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.css attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.css attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.3d7d898c.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin main.3d7d898c.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin runtime~main.e94210ff.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin runtime~main.e94210ff.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 665.d74fb5f4.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 665.d74fb5f4.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 347.8c7824d1.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 347.8c7824d1.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 881.93fb64ee.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 881.93fb64ee.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 459.deeb0b85.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 459.deeb0b85.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 331.0fdf80c0.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 331.0fdf80c0.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 611.a2463068.iframe.bundle.js attach SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin 611.a2463068.iframe.bundle.js attached SourceMap
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin resolve sources
<s> [webpack.Progress] 92% sealing asset processing SourceMapDevToolPlugin
<s> [webpack.Progress] 92% sealing asset processing HtmlWebpackPlugin
<s> [webpack.Progress] 92% sealing asset processing HtmlWebpackPlugin
<s> [webpack.Progress] 92% sealing asset processing HtmlWebpackPlugin resolve sources
<s> [webpack.Progress] 92% sealing asset processing HtmlWebpackPlugin
<s> [webpack.Progress] 92% sealing asset processing RealContentHashPlugin
<s> [webpack.Progress] 92% sealing asset processing RealContentHashPlugin
<s> [webpack.Progress] 92% sealing asset processing RealContentHashPlugin resolve sources
<s> [webpack.Progress] 92% sealing asset processing RealContentHashPlugin
<s> [webpack.Progress] 92% sealing asset processing
<s> [webpack.Progress] 93% sealing after asset optimization
<s> [webpack.Progress] 93% sealing after asset optimization ts-loader
<s> [webpack.Progress] 93% sealing after asset optimization
<s> [webpack.Progress] 93% sealing recording
<s> [webpack.Progress] 93% sealing recording
<s> [webpack.Progress] 94% sealing after seal
<s> [webpack.Progress] 94% sealing after seal
<s> [webpack.Progress] 95% emitting emit
<s> [webpack.Progress] 95% emitting emit
<s> [webpack.Progress] 98% emitting after emit
<s> [webpack.Progress] 98% emitting after emit SizeLimitsPlugin
<s> [webpack.Progress] 98% emitting after emit
<s> [webpack.Progress] 99% done plugins
<s> [webpack.Progress] 99% done plugins CaseSensitivePathsPlugin
<s> [webpack.Progress] 99% done plugins
<s> [webpack.Progress] 99% 

<s> [webpack.Progress] 99% cache store build dependencies
<s> [webpack.Progress] 99% cache store build dependencies
<s> [webpack.Progress] 99% cache begin idle
<s> [webpack.Progress] 99% cache begin idle
<s> [webpack.Progress] 100% 

info => Preview built (27 s)
WARN DefinePlugin
WARN Conflicting values for 'process.env'
WARN asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
WARN This can impact web performance.
WARN Assets: 
WARN   611.944b7ff3.iframe.bundle.js (1.68 MiB)
WARN entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.
WARN Entrypoints:
WARN   main (1.76 MiB)
WARN       runtime~main.40429f9f.iframe.bundle.js
WARN       611.944b7ff3.iframe.bundle.js
WARN       main.css
WARN       main.97172b2b.iframe.bundle.js
WARN 
info => Output directory: /var/folders/vf/hc7q17dj43s2k8lmkm1bydjw0000gn/T/chromatic--30820-N6DGLegX1BRe
